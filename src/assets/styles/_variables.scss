/*
  Generate variables based on theme
  Ex:
  `--primary` on `light` theme will take the value
    of `--primary-light` variable in :root
*/

@mixin color-variables($theme) {
  $list:
    "primary",
    "on-primary",
    "secondary",
    "on-secondary",
    "surface",
    "on-surface",
    "background",
    "on-background"
  ;
  @each $var in $list {
    --#{$var}: var(--#{$var}-#{$theme});
  }
  // @for $i from 1 through length($list) {
  //   --#{nth($list, $i)}: var(--#{nth($list, $i)}-#{$theme});
  // }
}

:root {
  /*
    Base variables
    Won't be used directly in any case
  */

  --red-hue: 360;
  --blue-hue: 240;
  --green-hue: 120;

  --main-hue : 220;

  // Light Theme
  --background-light: hsl(var(--main-hue), 50%, 95%);
  --on-background-light: hsl(var(--main-hue), 50%, 30%);

  --primary-light: hsl(var(--main-hue), 50%, 50%);
  --on-primary-light: hsl(var(--main-hue), 50%, 90%);

  --secondary-light: hsl(var(--main-hue), 93%, 88%);
  --on-secondary-light: hsl(var(--main-hue), 50%, 30%);

  --surface-light: hsl(var(--main-hue), 50%, 90%);
  --on-surface-light: hsl(var(--main-hue), 50%, 30%);

  // Dark Theme
  --background-dark: hsl(var(--main-hue), 50%, 20%);
  --on-background-dark: hsl(var(--main-hue), 50%, 80%);

  --primary-dark: hsl(var(--main-hue), 50%, 70%);
  --on-primary-dark: hsl(var(--main-hue), 50%, 10%);

  --secondary-dark: hsl(var(--main-hue), 50%, 30%);
  --on-secondary-dark: hsl(var(--main-hue), 20%, 85%);

  --surface-dark: hsl(var(--main-hue), 50%, 25%);
  --on-surface-dark: hsl(var(--main-hue), 50%, 85%);
}

body {
  @include color-variables("dark");
  &[data-theme="light"] {
    @include color-variables("light");
  }

  --code: rgba(0, 0, 0, .3);
  --header-height: 60px;
}
